spring.application.name=feign-consumer
server.port=2005
eureka.client.service-url.defaultZone=http://localhost:1111/eureka/


## 这种配置是一种全局配置，就是是对所有的请求生效的，如果想针对不同的服务配置不同的连接超时和读取超时，那么我们可以在属性的前面加上服务的名字
## 设置针对hello-service服务的连接超时时间
## hello-service.ribbon.ConnectTimeout=600
#设置服务的链接超时时间
#ribbon.ConnectTimeout=600
#设置服务的读取超时时间
#ribbon.ReadTimeout=6000
#设置服务所有操作请求都进行重试
#ribbon.OkToRetryOnAllOperations=true
#设置服务切换实例的重试次数
#ribbon.MaxAutoRetriesNextServer=2
#设置服务的当前实例的重试次数
#ribbon.MaxAutoRetries=1


## feign中Hystrix的配置和Ribbon有点像,基础配置如下:
#设置熔断超时时间
#hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=1000
#关闭Hystrix功能(不要和上面的配置一起使用)
#hystrix.enabled=false
#关闭熔炉功能
#hystrix.command.default.execution.timeout.enabled=false

##这种配置也是全局配置,如果我们想针对某一个接口配置,比如/hello接口,那么可以按照下面这种写法:
# 设置熔断超时时间
#hystrix.command.hello.execution.isolation.thread.timeoutInMilliseconds=1000
# 关闭熔断功能
#hystrix.command.hello.execution.timeout.enabled=false

# 新版本Dalston.SR3中的spring cloud feign默认是关闭Hystrix功能的
#feign.hystrix.enabled=true

## spring cloud feign 支持对请求和相应进行GZIP压缩,以提高通信效率
#配置请求GZIP压缩
#feign.compression.request.enabled=true
# 配置相应GZIP压缩
#feign.compression.response.enabled=true
# 配置压缩支持的MIME TYPE
#feign.compression.request.mime-types=text/xml,application/xml,application/json
# 配置压缩数据大小的下限
#feign.compression.request.min-request-size=2048


##feign为每一个FeignClient都提供了一个feign.Logger实例,我们可以在配置中开启日志
##第一步:application.properties中配置日志输出
#开启日志	格式为logging.level.+Feign客户端路径
#logging.level.org.sang.service.org.sang.service.HelloService=debug

##第二步:入口类中配置日志Bean
#@Bean
#Logger.Level feignLoggerLevel() {
#	return Logger.Level.FULL;
#}









